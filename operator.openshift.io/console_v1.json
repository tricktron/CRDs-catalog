{
    "description": "Console provides a means to configure an operator to manage the console.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
    "properties": {
        "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
        },
        "kind": {
            "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
        },
        "metadata": {
            "type": "object"
        },
        "spec": {
            "description": "ConsoleSpec is the specification of the desired behavior of the Console.",
            "properties": {
                "customization": {
                    "description": "customization is used to optionally provide a small set of\ncustomization options to the web console.",
                    "properties": {
                        "addPage": {
                            "description": "addPage allows customizing actions on the Add page in developer perspective.",
                            "properties": {
                                "disabledActions": {
                                    "description": "disabledActions is a list of actions that are not shown to users.\nEach action in the list is represented by its ID.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "brand": {
                            "description": "brand is the default branding of the web console which can be overridden by\nproviding the brand field.  There is a limited set of specific brand options.\nThis field controls elements of the console such as the logo.\nInvalid value will prevent a console rollout.",
                            "enum": [
                                "openshift",
                                "okd",
                                "online",
                                "ocp",
                                "dedicated",
                                "azure",
                                "OpenShift",
                                "OKD",
                                "Online",
                                "OCP",
                                "Dedicated",
                                "Azure",
                                "ROSA"
                            ],
                            "type": "string"
                        },
                        "capabilities": {
                            "description": "capabilities defines an array of capabilities that can be interacted with in the console UI.\nEach capability defines a visual state that can be interacted with the console to render in the UI.\nAvailable capabilities are LightspeedButton and GettingStartedBanner.\nEach of the available capabilities may appear only once in the list.",
                            "items": {
                                "description": "Capabilities contains set of UI capabilities and their state in the console UI.",
                                "properties": {
                                    "name": {
                                        "description": "name is the unique name of a capability.\nAvailable capabilities are LightspeedButton and GettingStartedBanner.",
                                        "enum": [
                                            "LightspeedButton",
                                            "GettingStartedBanner"
                                        ],
                                        "type": "string"
                                    },
                                    "visibility": {
                                        "description": "visibility defines the visibility state of the capability.",
                                        "properties": {
                                            "state": {
                                                "description": "state defines if the capability is enabled or disabled in the console UI.\nEnabling the capability in the console UI is represented by the \"Enabled\" value.\nDisabling the capability in the console UI is represented by the \"Disabled\" value.",
                                                "enum": [
                                                    "Enabled",
                                                    "Disabled"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "state"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "required": [
                                    "name",
                                    "visibility"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "maxItems": 2,
                            "minItems": 1,
                            "type": "array",
                            "x-kubernetes-list-map-keys": [
                                "name"
                            ],
                            "x-kubernetes-list-type": "map"
                        },
                        "customLogoFile": {
                            "description": "customLogoFile replaces the default OpenShift logo in the masthead and about dialog. It is a reference to a\nConfigMap in the openshift-config namespace. This can be created with a command like\n'oc create configmap custom-logo --from-file=/path/to/file -n openshift-config'.\nImage size must be less than 1 MB due to constraints on the ConfigMap size.\nThe ConfigMap key should include a file extension so that the console serves the file\nwith the correct MIME type.\nRecommended logo specifications:\nDimensions: Max height of 68px and max width of 200px\nSVG format preferred",
                            "properties": {
                                "key": {
                                    "description": "Key allows pointing to a specific key/value inside of the configmap.  This is useful for logical file references.",
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "customProductName": {
                            "description": "customProductName is the name that will be displayed in page titles, logo alt text, and the about dialog\ninstead of the normal OpenShift product name.",
                            "type": "string"
                        },
                        "developerCatalog": {
                            "description": "developerCatalog allows to configure the shown developer catalog categories (filters) and types (sub-catalogs).",
                            "properties": {
                                "categories": {
                                    "description": "categories which are shown in the developer catalog.",
                                    "items": {
                                        "description": "DeveloperConsoleCatalogCategory for the developer console catalog.",
                                        "properties": {
                                            "id": {
                                                "description": "ID is an identifier used in the URL to enable deep linking in console.\nID is required and must have 1-32 URL safe (A-Z, a-z, 0-9, - and _) characters.",
                                                "maxLength": 32,
                                                "minLength": 1,
                                                "pattern": "^[A-Za-z0-9-_]+$",
                                                "type": "string"
                                            },
                                            "label": {
                                                "description": "label defines a category display label. It is required and must have 1-64 characters.",
                                                "maxLength": 64,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "subcategories": {
                                                "description": "subcategories defines a list of child categories.",
                                                "items": {
                                                    "description": "DeveloperConsoleCatalogCategoryMeta are the key identifiers of a developer catalog category.",
                                                    "properties": {
                                                        "id": {
                                                            "description": "ID is an identifier used in the URL to enable deep linking in console.\nID is required and must have 1-32 URL safe (A-Z, a-z, 0-9, - and _) characters.",
                                                            "maxLength": 32,
                                                            "minLength": 1,
                                                            "pattern": "^[A-Za-z0-9-_]+$",
                                                            "type": "string"
                                                        },
                                                        "label": {
                                                            "description": "label defines a category display label. It is required and must have 1-64 characters.",
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "tags": {
                                                            "description": "tags is a list of strings that will match the category. A selected category\nshow all items which has at least one overlapping tag between category and item.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "label"
                                                    ],
                                                    "type": "object",
                                                    "additionalProperties": false
                                                },
                                                "type": "array"
                                            },
                                            "tags": {
                                                "description": "tags is a list of strings that will match the category. A selected category\nshow all items which has at least one overlapping tag between category and item.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "label"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                },
                                "types": {
                                    "description": "types allows enabling or disabling of sub-catalog types that user can see in the Developer catalog.\nWhen omitted, all the sub-catalog types will be shown.",
                                    "properties": {
                                        "disabled": {
                                            "description": "disabled is a list of developer catalog types (sub-catalogs IDs) that are not shown to users.\nTypes (sub-catalogs) are added via console plugins, the available types (sub-catalog IDs) are available\nin the console on the cluster configuration page, or when editing the YAML in the console.\nExample: \"Devfile\", \"HelmChart\", \"BuilderImage\"\nIf the list is empty or all the available sub-catalog types are added, then the complete developer catalog should be hidden.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "set"
                                        },
                                        "enabled": {
                                            "description": "enabled is a list of developer catalog types (sub-catalogs IDs) that will be shown to users.\nTypes (sub-catalogs) are added via console plugins, the available types (sub-catalog IDs) are available\nin the console on the cluster configuration page, or when editing the YAML in the console.\nExample: \"Devfile\", \"HelmChart\", \"BuilderImage\"\nIf the list is non-empty, a new type will not be shown to the user until it is added to list.\nIf the list is empty the complete developer catalog will be shown.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "set"
                                        },
                                        "state": {
                                            "default": "Enabled",
                                            "description": "state defines if a list of catalog types should be enabled or disabled.",
                                            "enum": [
                                                "Enabled",
                                                "Disabled"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "state"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-validations": [
                                        {
                                            "message": "enabled is forbidden when state is not Enabled",
                                            "rule": "self.state == 'Enabled' ? true : !has(self.enabled)"
                                        },
                                        {
                                            "message": "disabled is forbidden when state is not Disabled",
                                            "rule": "self.state == 'Disabled' ? true : !has(self.disabled)"
                                        }
                                    ],
                                    "additionalProperties": false
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "documentationBaseURL": {
                            "description": "documentationBaseURL links to external documentation are shown in various sections\nof the web console.  Providing documentationBaseURL will override the default\ndocumentation URL.\nInvalid value will prevent a console rollout.",
                            "pattern": "^$|^((https):\\/\\/?)[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|\\/?))\\/$",
                            "type": "string"
                        },
                        "perspectives": {
                            "description": "perspectives allows enabling/disabling of perspective(s) that user can see in the Perspective switcher dropdown.",
                            "items": {
                                "description": "Perspective defines a perspective that cluster admins want to show/hide in the perspective switcher dropdown",
                                "properties": {
                                    "id": {
                                        "description": "id defines the id of the perspective.\nExample: \"dev\", \"admin\".\nThe available perspective ids can be found in the code snippet section next to the yaml editor.\nIncorrect or unknown ids will be ignored.",
                                        "type": "string"
                                    },
                                    "pinnedResources": {
                                        "description": "pinnedResources defines the list of default pinned resources that users will see on the perspective navigation if they have not customized these pinned resources themselves.\nThe list of available Kubernetes resources could be read via `kubectl api-resources`.\nThe console will also provide a configuration UI and a YAML snippet that will list the available resources that can be pinned to the navigation.\nIncorrect or unknown resources will be ignored.",
                                        "items": {
                                            "description": "PinnedResourceReference includes the group, version and type of resource",
                                            "properties": {
                                                "group": {
                                                    "description": "group is the API Group of the Resource.\nEnter empty string for the core group.\nThis value should consist of only lowercase alphanumeric characters, hyphens and periods.\nExample: \"\", \"apps\", \"build.openshift.io\", etc.",
                                                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                                                    "type": "string"
                                                },
                                                "resource": {
                                                    "description": "resource is the type that is being referenced.\nIt is normally the plural form of the resource kind in lowercase.\nThis value should consist of only lowercase alphanumeric characters and hyphens.\nExample: \"deployments\", \"deploymentconfigs\", \"pods\", etc.",
                                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "description": "version is the API Version of the Resource.\nThis value should consist of only lowercase alphanumeric characters.\nExample: \"v1\", \"v1beta1\", etc.",
                                                    "pattern": "^[a-z0-9]+$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "group",
                                                "resource",
                                                "version"
                                            ],
                                            "type": "object",
                                            "additionalProperties": false
                                        },
                                        "maxItems": 100,
                                        "type": "array"
                                    },
                                    "visibility": {
                                        "description": "visibility defines the state of perspective along with access review checks if needed for that perspective.",
                                        "properties": {
                                            "accessReview": {
                                                "description": "accessReview defines required and missing access review checks.",
                                                "minProperties": 1,
                                                "properties": {
                                                    "missing": {
                                                        "description": "missing defines a list of permission checks. The perspective will only be shown when at least one check fails. When omitted, the access review is skipped and the perspective will not be shown unless it is required to do so based on the configuration of the required access review list.",
                                                        "items": {
                                                            "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
                                                            "properties": {
                                                                "fieldSelector": {
                                                                    "description": "fieldSelector describes the limitation on access based on field.  It can only limit access, not broaden it.\n\nThis field  is alpha-level. To use this field, you must enable the\n`AuthorizeWithSelectors` feature gate (disabled by default).",
                                                                    "properties": {
                                                                        "rawSelector": {
                                                                            "description": "rawSelector is the serialization of a field selector that would be included in a query parameter.\nWebhook implementations are encouraged to ignore rawSelector.\nThe kube-apiserver's *SubjectAccessReview will parse the rawSelector as long as the requirements are not present.",
                                                                            "type": "string"
                                                                        },
                                                                        "requirements": {
                                                                            "description": "requirements is the parsed interpretation of a field selector.\nAll requirements must be met for a resource instance to match the selector.\nWebhook implementations should handle requirements, but how to handle them is up to the webhook.\nSince requirements can only limit the request, it is safe to authorize as unlimited request if the requirements\nare not understood.",
                                                                            "items": {
                                                                                "description": "FieldSelectorRequirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "key is the field selector key that the requirement applies to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "operator": {
                                                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist.\nThe list of operators may grow in the future.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "values": {
                                                                                        "description": "values is an array of string values.\nIf the operator is In or NotIn, the values array must be non-empty.\nIf the operator is Exists or DoesNotExist, the values array must be empty.",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array",
                                                                                        "x-kubernetes-list-type": "atomic"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key",
                                                                                    "operator"
                                                                                ],
                                                                                "type": "object",
                                                                                "additionalProperties": false
                                                                            },
                                                                            "type": "array",
                                                                            "x-kubernetes-list-type": "atomic"
                                                                        }
                                                                    },
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "group": {
                                                                    "description": "Group is the API Group of the Resource.  \"*\" means all.",
                                                                    "type": "string"
                                                                },
                                                                "labelSelector": {
                                                                    "description": "labelSelector describes the limitation on access based on labels.  It can only limit access, not broaden it.\n\nThis field  is alpha-level. To use this field, you must enable the\n`AuthorizeWithSelectors` feature gate (disabled by default).",
                                                                    "properties": {
                                                                        "rawSelector": {
                                                                            "description": "rawSelector is the serialization of a field selector that would be included in a query parameter.\nWebhook implementations are encouraged to ignore rawSelector.\nThe kube-apiserver's *SubjectAccessReview will parse the rawSelector as long as the requirements are not present.",
                                                                            "type": "string"
                                                                        },
                                                                        "requirements": {
                                                                            "description": "requirements is the parsed interpretation of a label selector.\nAll requirements must be met for a resource instance to match the selector.\nWebhook implementations should handle requirements, but how to handle them is up to the webhook.\nSince requirements can only limit the request, it is safe to authorize as unlimited request if the requirements\nare not understood.",
                                                                            "items": {
                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "operator": {
                                                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "values": {
                                                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array",
                                                                                        "x-kubernetes-list-type": "atomic"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key",
                                                                                    "operator"
                                                                                ],
                                                                                "type": "object",
                                                                                "additionalProperties": false
                                                                            },
                                                                            "type": "array",
                                                                            "x-kubernetes-list-type": "atomic"
                                                                        }
                                                                    },
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "name": {
                                                                    "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
                                                                    "type": "string"
                                                                },
                                                                "namespace": {
                                                                    "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces\n\"\" (empty) is defaulted for LocalSubjectAccessReviews\n\"\" (empty) is empty for cluster-scoped resources\n\"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
                                                                    "type": "string"
                                                                },
                                                                "resource": {
                                                                    "description": "Resource is one of the existing resource types.  \"*\" means all.",
                                                                    "type": "string"
                                                                },
                                                                "subresource": {
                                                                    "description": "Subresource is one of the existing resource types.  \"\" means none.",
                                                                    "type": "string"
                                                                },
                                                                "verb": {
                                                                    "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
                                                                    "type": "string"
                                                                },
                                                                "version": {
                                                                    "description": "Version is the API Version of the Resource.  \"*\" means all.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                    },
                                                    "required": {
                                                        "description": "required defines a list of permission checks. The perspective will only be shown when all checks are successful. When omitted, the access review is skipped and the perspective will not be shown unless it is required to do so based on the configuration of the missing access review list.",
                                                        "items": {
                                                            "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
                                                            "properties": {
                                                                "fieldSelector": {
                                                                    "description": "fieldSelector describes the limitation on access based on field.  It can only limit access, not broaden it.\n\nThis field  is alpha-level. To use this field, you must enable the\n`AuthorizeWithSelectors` feature gate (disabled by default).",
                                                                    "properties": {
                                                                        "rawSelector": {
                                                                            "description": "rawSelector is the serialization of a field selector that would be included in a query parameter.\nWebhook implementations are encouraged to ignore rawSelector.\nThe kube-apiserver's *SubjectAccessReview will parse the rawSelector as long as the requirements are not present.",
                                                                            "type": "string"
                                                                        },
                                                                        "requirements": {
                                                                            "description": "requirements is the parsed interpretation of a field selector.\nAll requirements must be met for a resource instance to match the selector.\nWebhook implementations should handle requirements, but how to handle them is up to the webhook.\nSince requirements can only limit the request, it is safe to authorize as unlimited request if the requirements\nare not understood.",
                                                                            "items": {
                                                                                "description": "FieldSelectorRequirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "key is the field selector key that the requirement applies to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "operator": {
                                                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist.\nThe list of operators may grow in the future.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "values": {
                                                                                        "description": "values is an array of string values.\nIf the operator is In or NotIn, the values array must be non-empty.\nIf the operator is Exists or DoesNotExist, the values array must be empty.",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array",
                                                                                        "x-kubernetes-list-type": "atomic"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key",
                                                                                    "operator"
                                                                                ],
                                                                                "type": "object",
                                                                                "additionalProperties": false
                                                                            },
                                                                            "type": "array",
                                                                            "x-kubernetes-list-type": "atomic"
                                                                        }
                                                                    },
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "group": {
                                                                    "description": "Group is the API Group of the Resource.  \"*\" means all.",
                                                                    "type": "string"
                                                                },
                                                                "labelSelector": {
                                                                    "description": "labelSelector describes the limitation on access based on labels.  It can only limit access, not broaden it.\n\nThis field  is alpha-level. To use this field, you must enable the\n`AuthorizeWithSelectors` feature gate (disabled by default).",
                                                                    "properties": {
                                                                        "rawSelector": {
                                                                            "description": "rawSelector is the serialization of a field selector that would be included in a query parameter.\nWebhook implementations are encouraged to ignore rawSelector.\nThe kube-apiserver's *SubjectAccessReview will parse the rawSelector as long as the requirements are not present.",
                                                                            "type": "string"
                                                                        },
                                                                        "requirements": {
                                                                            "description": "requirements is the parsed interpretation of a label selector.\nAll requirements must be met for a resource instance to match the selector.\nWebhook implementations should handle requirements, but how to handle them is up to the webhook.\nSince requirements can only limit the request, it is safe to authorize as unlimited request if the requirements\nare not understood.",
                                                                            "items": {
                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "operator": {
                                                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "values": {
                                                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array",
                                                                                        "x-kubernetes-list-type": "atomic"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key",
                                                                                    "operator"
                                                                                ],
                                                                                "type": "object",
                                                                                "additionalProperties": false
                                                                            },
                                                                            "type": "array",
                                                                            "x-kubernetes-list-type": "atomic"
                                                                        }
                                                                    },
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "name": {
                                                                    "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
                                                                    "type": "string"
                                                                },
                                                                "namespace": {
                                                                    "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces\n\"\" (empty) is defaulted for LocalSubjectAccessReviews\n\"\" (empty) is empty for cluster-scoped resources\n\"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
                                                                    "type": "string"
                                                                },
                                                                "resource": {
                                                                    "description": "Resource is one of the existing resource types.  \"*\" means all.",
                                                                    "type": "string"
                                                                },
                                                                "subresource": {
                                                                    "description": "Subresource is one of the existing resource types.  \"\" means none.",
                                                                    "type": "string"
                                                                },
                                                                "verb": {
                                                                    "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
                                                                    "type": "string"
                                                                },
                                                                "version": {
                                                                    "description": "Version is the API Version of the Resource.  \"*\" means all.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "state": {
                                                "description": "state defines the perspective is enabled or disabled or access review check is required.",
                                                "enum": [
                                                    "Enabled",
                                                    "Disabled",
                                                    "AccessReview"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "state"
                                        ],
                                        "type": "object",
                                        "x-kubernetes-validations": [
                                            {
                                                "message": "accessReview configuration is required when state is AccessReview, and forbidden otherwise",
                                                "rule": "self.state == 'AccessReview' ?  has(self.accessReview) : !has(self.accessReview)"
                                            }
                                        ],
                                        "additionalProperties": false
                                    }
                                },
                                "required": [
                                    "id",
                                    "visibility"
                                ],
                                "type": "object",
                                "x-kubernetes-validations": [
                                    {
                                        "message": "pinnedResources is allowed only for dev and forbidden for other perspectives",
                                        "rule": "has(self.id) && self.id != 'dev'? !has(self.pinnedResources) : true"
                                    }
                                ],
                                "additionalProperties": false
                            },
                            "type": "array",
                            "x-kubernetes-list-map-keys": [
                                "id"
                            ],
                            "x-kubernetes-list-type": "map"
                        },
                        "projectAccess": {
                            "description": "projectAccess allows customizing the available list of ClusterRoles in the Developer perspective\nProject access page which can be used by a project admin to specify roles to other users and\nrestrict access within the project. If set, the list will replace the default ClusterRole options.",
                            "properties": {
                                "availableClusterRoles": {
                                    "description": "availableClusterRoles is the list of ClusterRole names that are assignable to users\nthrough the project access tab.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "quickStarts": {
                            "description": "quickStarts allows customization of available ConsoleQuickStart resources in console.",
                            "properties": {
                                "disabled": {
                                    "description": "disabled is a list of ConsoleQuickStart resource names that are not shown to users.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "ingress": {
                    "description": "ingress allows to configure the alternative ingress for the console.\nThis field is intended for clusters without ingress capability,\nwhere access to routes is not possible.",
                    "properties": {
                        "clientDownloadsURL": {
                            "description": "clientDownloadsURL is a URL to be used as the address to download client binaries.\nIf not specified, the downloads route hostname will be used.\nThis field is required for clusters without ingress capability,\nwhere access to routes is not possible.\nThe console operator will monitor the URL and may go degraded\nif it's unreachable for an extended period.\nMust use the HTTPS scheme.",
                            "maxLength": 1024,
                            "type": "string",
                            "x-kubernetes-validations": [
                                {
                                    "message": "client downloads url must be a valid absolute URL",
                                    "rule": "size(self) == 0 || isURL(self)"
                                },
                                {
                                    "message": "client downloads url scheme must be https",
                                    "rule": "size(self) == 0 || url(self).getScheme() == 'https'"
                                }
                            ]
                        },
                        "consoleURL": {
                            "description": "consoleURL is a URL to be used as the base console address.\nIf not specified, the console route hostname will be used.\nThis field is required for clusters without ingress capability,\nwhere access to routes is not possible.\nMake sure that appropriate ingress is set up at this URL.\nThe console operator will monitor the URL and may go degraded\nif it's unreachable for an extended period.\nMust use the HTTPS scheme.",
                            "maxLength": 1024,
                            "type": "string",
                            "x-kubernetes-validations": [
                                {
                                    "message": "console url must be a valid absolute URL",
                                    "rule": "size(self) == 0 || isURL(self)"
                                },
                                {
                                    "message": "console url scheme must be https",
                                    "rule": "size(self) == 0 || url(self).getScheme() == 'https'"
                                }
                            ]
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "logLevel": {
                    "default": "Normal",
                    "description": "logLevel is an intent based logging for an overall component.  It does not give fine grained control, but it is a\nsimple way to manage coarse grained logging choices that operators have to interpret for their operands.\n\nValid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\".\nDefaults to \"Normal\".",
                    "enum": [
                        "",
                        "Normal",
                        "Debug",
                        "Trace",
                        "TraceAll"
                    ],
                    "type": "string"
                },
                "managementState": {
                    "description": "managementState indicates whether and how the operator should manage the component",
                    "pattern": "^(Managed|Unmanaged|Force|Removed)$",
                    "type": "string"
                },
                "observedConfig": {
                    "description": "observedConfig holds a sparse config that controller has observed from the cluster state.  It exists in spec because\nit is an input to the level for the operator",
                    "type": [
                        "object",
                        "null"
                    ],
                    "x-kubernetes-preserve-unknown-fields": true
                },
                "operatorLogLevel": {
                    "default": "Normal",
                    "description": "operatorLogLevel is an intent based logging for the operator itself.  It does not give fine grained control, but it is a\nsimple way to manage coarse grained logging choices that operators have to interpret for themselves.\n\nValid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\".\nDefaults to \"Normal\".",
                    "enum": [
                        "",
                        "Normal",
                        "Debug",
                        "Trace",
                        "TraceAll"
                    ],
                    "type": "string"
                },
                "plugins": {
                    "description": "plugins defines a list of enabled console plugin names.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "providers": {
                    "description": "providers contains configuration for using specific service providers.",
                    "properties": {
                        "statuspage": {
                            "description": "statuspage contains ID for statuspage.io page that provides status info about.",
                            "properties": {
                                "pageID": {
                                    "description": "pageID is the unique ID assigned by Statuspage for your page. This must be a public page.",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "route": {
                    "description": "route contains hostname and secret reference that contains the serving certificate.\nIf a custom route is specified, a new route will be created with the\nprovided hostname, under which console will be available.\nIn case of custom hostname uses the default routing suffix of the cluster,\nthe Secret specification for a serving certificate will not be needed.\nIn case of custom hostname points to an arbitrary domain, manual DNS configurations steps are necessary.\nThe default console route will be maintained to reserve the default hostname\nfor console if the custom route is removed.\nIf not specified, default route will be used.\nDEPRECATED",
                    "properties": {
                        "hostname": {
                            "description": "hostname is the desired custom domain under which console will be available.",
                            "type": "string"
                        },
                        "secret": {
                            "description": "secret points to secret in the openshift-config namespace that contains custom\ncertificate and key and needs to be created manually by the cluster admin.\nReferenced Secret is required to contain following key value pairs:\n- \"tls.crt\" - to specifies custom certificate\n- \"tls.key\" - to specifies private key of the custom certificate\nIf the custom hostname uses the default routing suffix of the cluster,\nthe Secret specification for a serving certificate will not be needed.",
                            "properties": {
                                "name": {
                                    "description": "name is the metadata.name of the referenced secret",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "unsupportedConfigOverrides": {
                    "description": "unsupportedConfigOverrides overrides the final configuration that was computed by the operator.\nRed Hat does not support the use of this field.\nMisuse of this field could lead to unexpected behavior or conflict with other configuration options.\nSeek guidance from the Red Hat support before using this field.\nUse of this property blocks cluster upgrades, it must be removed before upgrading your cluster.",
                    "type": [
                        "object",
                        "null"
                    ],
                    "x-kubernetes-preserve-unknown-fields": true
                }
            },
            "type": "object",
            "additionalProperties": false
        },
        "status": {
            "description": "ConsoleStatus defines the observed status of the Console.",
            "properties": {
                "conditions": {
                    "description": "conditions is a list of conditions and their status",
                    "items": {
                        "description": "OperatorCondition is just the standard condition fields.",
                        "properties": {
                            "lastTransitionTime": {
                                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            },
                            "status": {
                                "description": "status of the condition, one of True, False, Unknown.",
                                "enum": [
                                    "True",
                                    "False",
                                    "Unknown"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                "maxLength": 316,
                                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                "type": "string"
                            }
                        },
                        "required": [
                            "lastTransitionTime",
                            "status",
                            "type"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array",
                    "x-kubernetes-list-map-keys": [
                        "type"
                    ],
                    "x-kubernetes-list-type": "map"
                },
                "generations": {
                    "description": "generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction.",
                    "items": {
                        "description": "GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.",
                        "properties": {
                            "group": {
                                "description": "group is the group of the thing you're tracking",
                                "type": "string"
                            },
                            "hash": {
                                "description": "hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps",
                                "type": "string"
                            },
                            "lastGeneration": {
                                "description": "lastGeneration is the last generation of the workload controller involved",
                                "format": "int64",
                                "type": "integer",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "name": {
                                "description": "name is the name of the thing you're tracking",
                                "type": "string"
                            },
                            "namespace": {
                                "description": "namespace is where the thing you're tracking is",
                                "type": "string"
                            },
                            "resource": {
                                "description": "resource is the resource type of the thing you're tracking",
                                "type": "string"
                            }
                        },
                        "required": [
                            "group",
                            "name",
                            "namespace",
                            "resource"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array",
                    "x-kubernetes-list-map-keys": [
                        "group",
                        "resource",
                        "namespace",
                        "name"
                    ],
                    "x-kubernetes-list-type": "map"
                },
                "latestAvailableRevision": {
                    "description": "latestAvailableRevision is the deploymentID of the most recent deployment",
                    "format": "int32",
                    "type": "integer",
                    "x-kubernetes-validations": [
                        {
                            "message": "must only increase",
                            "rule": "self >= oldSelf"
                        }
                    ],
                    "minimum": -2147483648,
                    "maximum": 2147483647
                },
                "observedGeneration": {
                    "description": "observedGeneration is the last generation change you've dealt with",
                    "format": "int64",
                    "type": "integer",
                    "minimum": -9223372036854776000,
                    "maximum": 9223372036854776000
                },
                "readyReplicas": {
                    "description": "readyReplicas indicates how many replicas are ready and at the desired state",
                    "format": "int32",
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                },
                "version": {
                    "description": "version is the level this availability applies to",
                    "type": "string"
                }
            },
            "type": "object",
            "additionalProperties": false
        }
    },
    "required": [
        "spec"
    ],
    "type": "object",
    "additionalProperties": false,
    "$schema": "http://json-schema.org/draft-04/schema#"
}
