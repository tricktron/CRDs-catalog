{
    "description": "StableConfigType is a stable config type that may include TechPreviewNoUpgrade fields.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
    "properties": {
        "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
        },
        "kind": {
            "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
        },
        "metadata": {
            "type": "object"
        },
        "spec": {
            "description": "spec is the specification of the desired behavior of the StableConfigType.",
            "properties": {
                "celUnion": {
                    "description": "celUnion demonstrates how to validate a discrminated union using CEL",
                    "properties": {
                        "optionalMember": {
                            "description": "optionalMember is a union member that is optional.",
                            "type": "string"
                        },
                        "requiredMember": {
                            "description": "requiredMember is a union member that is required.",
                            "type": "string"
                        },
                        "type": {
                            "description": "type determines which of the union members should be populated.",
                            "enum": [
                                "RequiredMember",
                                "OptionalMember",
                                "EmptyMember"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object",
                    "x-kubernetes-validations": [
                        {
                            "message": "requiredMember is required when type is RequiredMember, and forbidden otherwise",
                            "rule": "has(self.type) && self.type == 'RequiredMember' ?  has(self.requiredMember) : !has(self.requiredMember)"
                        },
                        {
                            "message": "optionalMember is forbidden when type is not OptionalMember",
                            "rule": "has(self.type) && self.type == 'OptionalMember' ?  true : !has(self.optionalMember)"
                        }
                    ],
                    "additionalProperties": false
                },
                "evolvingCollection": {
                    "description": "evolvingCollection demonstrates how to have a collection where the maximum number of items varies on cluster type.\nFor default clusters, this will be \"1\" but on TechPreview clusters, this value will be \"3\".",
                    "items": {
                        "type": "string"
                    },
                    "maxItems": 1,
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                },
                "evolvingUnion": {
                    "description": "evolvingUnion demonstrates how to phase in new values into discriminated union",
                    "properties": {
                        "type": {
                            "description": "type is the discriminator. It has different values for Default and for TechPreviewNoUpgrade",
                            "enum": [
                                "",
                                "StableValue"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "immutableField": {
                    "description": "immutableField is a field that is immutable once the object has been created.\nIt is required at all times.",
                    "type": "string",
                    "x-kubernetes-validations": [
                        {
                            "message": "immutableField is immutable",
                            "rule": "self == oldSelf"
                        }
                    ]
                },
                "nonZeroDefault": {
                    "default": 8,
                    "description": "nonZeroDefault is a demonstration of creating an integer field that has a non zero default.\nIt required two default tags (one for CRD generation, one for client generation) and must have `omitempty` and be optional.\nA minimum value is added to demonstrate that a zero value would not be accepted.",
                    "format": "int32",
                    "minimum": 8,
                    "type": "integer",
                    "maximum": 2147483647
                },
                "optionalImmutableField": {
                    "description": "optionalImmutableField is a field that is immutable once set.\nIt is optional but may not be changed once set.",
                    "type": "string",
                    "x-kubernetes-validations": [
                        {
                            "message": "optionalImmutableField is immutable once set",
                            "rule": "oldSelf == '' || self == oldSelf"
                        }
                    ]
                },
                "set": {
                    "description": "set demonstrates how to define and validate set of strings",
                    "items": {
                        "description": "SetValue defines the types allowed in string set type",
                        "enum": [
                            "Foo",
                            "Bar",
                            "Baz",
                            "Qux",
                            "Corge"
                        ],
                        "type": "string"
                    },
                    "maxItems": 5,
                    "type": "array",
                    "x-kubernetes-list-type": "set",
                    "x-kubernetes-validations": [
                        {
                            "rule": "self.all(x,self.exists_one(y,x == y))"
                        }
                    ]
                },
                "stableField": {
                    "description": "stableField is a field that is present on default clusters and on tech preview clusters\n\nIf empty, the platform will choose a good default, which may change over time without notice.",
                    "type": "string"
                }
            },
            "required": [
                "immutableField"
            ],
            "type": "object",
            "additionalProperties": false
        },
        "status": {
            "description": "status is the most recently observed status of the StableConfigType.",
            "properties": {
                "conditions": {
                    "description": "Represents the observations of a foo's current state.\nKnown .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"",
                    "items": {
                        "description": "Condition contains details for one aspect of the current state of this API Resource.",
                        "properties": {
                            "lastTransitionTime": {
                                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "message": {
                                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                "maxLength": 32768,
                                "type": "string"
                            },
                            "observedGeneration": {
                                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                "format": "int64",
                                "minimum": 0,
                                "type": "integer",
                                "maximum": 9223372036854776000
                            },
                            "reason": {
                                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                "maxLength": 1024,
                                "minLength": 1,
                                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                "type": "string"
                            },
                            "status": {
                                "description": "status of the condition, one of True, False, Unknown.",
                                "enum": [
                                    "True",
                                    "False",
                                    "Unknown"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                "maxLength": 316,
                                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                "type": "string"
                            }
                        },
                        "required": [
                            "lastTransitionTime",
                            "message",
                            "reason",
                            "status",
                            "type"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array",
                    "x-kubernetes-list-map-keys": [
                        "type"
                    ],
                    "x-kubernetes-list-type": "map"
                },
                "immutableField": {
                    "description": "immutableField is a field that is immutable once the object has been created.\nIt is required at all times.",
                    "type": "string",
                    "x-kubernetes-validations": [
                        {
                            "message": "immutableField is immutable",
                            "rule": "self == oldSelf"
                        }
                    ]
                }
            },
            "type": "object",
            "additionalProperties": false
        }
    },
    "type": "object",
    "additionalProperties": false,
    "$schema": "http://json-schema.org/draft-04/schema#"
}
